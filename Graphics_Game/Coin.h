//
// Created by Administrator on 3/11/2022.
//

#ifndef GRAPHICSGAME_COIN_H
#define GRAPHICSGAME_COIN_H
#include <QDebug>
#include "Brush.h"
#define CWIDTH 16
#define CHEIGHT 16
#define YELLOW 1
#define ORANGE 2
class Coin: public Brush {
private:
    QVector<QVector<int>> move1 = {
            {0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0},
            {0,0,0,0,2,1,1,1,1,1,1,2,0,0,0,0},
            {0,0,0,2,1,1,1,1,1,1,1,1,2,0,0,0},
            {0,0,2,1,1,1,1,2,2,1,1,1,1,2,0,0},
            {0,2,1,1,1,1,2,2,2,2,1,1,1,1,2,0},
            {2,1,1,1,1,2,2,2,2,2,2,1,1,1,1,2},
            {2,1,1,1,2,2,2,2,2,2,2,2,1,1,1,2},
            {2,1,1,2,2,2,2,2,2,2,2,2,2,1,1,2},
            {2,1,1,2,2,2,2,2,2,2,2,2,2,1,1,2},
            {2,1,1,1,2,2,2,2,2,2,2,2,1,1,1,2},
            {2,1,1,1,1,2,2,2,2,2,2,1,1,1,1,2},
            {0,2,1,1,1,1,2,2,2,2,1,1,1,1,2,0},
            {0,0,2,1,1,1,1,2,2,1,1,1,1,2,0,0},
            {0,0,0,2,1,1,1,1,1,1,1,1,2,0,0,0},
            {0,0,0,0,2,1,1,1,1,1,1,2,0,0,0,0},
            {0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0}
    };
    QVector<QVector<int>> move2 = {
            {0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0},
            {0,0,0,2,1,1,2,1,1,2,0,0,0,0,0,0},
            {0,0,2,1,1,2,2,1,1,2,0,0,0,0,0,0},
            {0,0,2,1,1,2,1,2,2,1,2,0,0,0,0,0},
            {0,0,2,1,1,2,1,2,2,1,2,0,0,0,0,0},
            {0,2,1,1,2,1,1,2,2,1,1,2,0,0,0,0},
            {0,2,1,1,2,1,2,2,2,2,1,2,0,0,0,0},
            {0,2,1,1,2,1,2,2,2,2,1,2,0,0,0,0},
            {0,2,1,1,2,1,2,2,2,2,1,2,0,0,0,0},
            {0,2,1,1,2,1,1,2,2,1,1,2,0,0,0,0},
            {0,2,1,1,2,1,1,2,2,1,1,2,0,0,0,0},
            {0,0,2,1,1,2,1,2,2,1,2,0,0,0,0,0},
            {0,0,2,1,1,2,1,2,2,1,2,0,0,0,0,0},
            {0,0,2,1,1,2,2,1,1,2,2,0,0,0,0,0},
            {0,0,0,2,1,1,2,1,1,2,0,0,0,0,0,0},
            {0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0}
    };
    QVector<QVector<int>> move4 = {
            {0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0},
            {0,0,0,0,0,0,2,1,1,2,1,1,2,0,0,0},
            {0,0,0,0,0,2,2,1,1,2,2,1,1,2,0,0},
            {0,0,0,0,0,2,1,2,2,1,2,1,1,2,0,0},
            {0,0,0,0,0,2,1,2,2,1,2,1,1,2,0,0},
            {0,0,0,0,2,1,1,2,2,1,1,2,1,1,2,0},
            {0,0,0,0,2,1,2,2,2,2,1,2,1,1,2,0},
            {0,0,0,0,2,1,2,2,2,2,1,2,1,1,2,0},
            {0,0,0,0,2,1,2,2,2,2,1,2,1,1,2,0},
            {0,0,0,0,2,1,1,2,2,1,1,2,1,1,2,0},
            {0,0,0,0,2,1,1,2,2,1,1,2,1,1,2,0},
            {0,0,0,0,0,2,1,2,2,1,2,1,1,2,0,0},
            {0,0,0,0,0,2,1,2,2,1,2,1,1,2,0,0},
            {0,0,0,0,0,2,2,1,1,2,2,1,1,2,0,0},
            {0,0,0,0,0,0,2,1,1,2,1,1,2,0,0,0},
            {0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0}
    };
    QVector<QVector<int>> move3 = {
            {0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0},
            {0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0}

    };

    QVector<QVector<QVector<int>>> sequence={move1,move2,move3,move4};   //动画序列 存放多个硬币造型
    QPoint pos;
    int scale;
public:

    Coin(int W, QPainter& P, QPen& Pen, int x=200, int y=300):Brush(W,P,Pen) {
        pos.setX(x);
        pos.setY(y);

        scale = 2;
    }
    int getNum(long updateCount){
        return (updateCount/10)%4;
    }
    void generate(long updateCount) {
        int num = getNum(updateCount);
        QVector<QVector<int>> choice;
//        int num = 0;
        choice = sequence[num];
        for (int i = 0; i < CHEIGHT * scale; i++) {
            for (int j = 0; j < CWIDTH * scale; j++) {
                if (choice[i / scale][j / scale]!=0){
                    switch (choice[i / scale][j / scale]) {
                        case 1:
                            _pen.setColor(Qt::yellow);
                            break;
                        case 2:
                            _pen.setColor(qRgb(254, 202, 87));
                            break;
                        case 0:
                            _pen.setColor(Qt::black);
                            break;
                    }
                    drawPixel(pos.x() + j, pos.y() + i);
//                    painter.drawPoint(pos.x() + j, pos.y() + i);

                }
            }
        }
    }
    QPoint getPos() {
        return pos;
    }
};


#endif //GRAPHICSGAME_COIN_H
